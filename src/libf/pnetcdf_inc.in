!
! pnetcdf fortran defines
!

!
! external netcdf data types:
!
      integer nf_byte
      integer nf_int1
      integer nf_char
      integer nf_short
      integer nf_int2
      integer nf_int
      integer nf_int64
      integer nf_float
      integer nf_real
      integer nf_double
      integer nf_request

      parameter (nf_byte = 1)
      parameter (nf_int1 = nf_byte)
      parameter (nf_char = 2)
      parameter (nf_short = 3)
      parameter (nf_int2 = nf_short)
      parameter (nf_int = 4)
      parameter (nf_float = 5)
      parameter (nf_real = nf_float)
      parameter (nf_double = 6)
      parameter (nf_int64 = 10)

!
! default fill values:
!
      integer           nf_fill_byte
      integer           nf_fill_int1
      integer           nf_fill_char
      integer           nf_fill_short
      integer           nf_fill_int2
      integer           nf_fill_int
      real              nf_fill_float
      real              nf_fill_real
      doubleprecision   nf_fill_double
      integer*8         nf_fill_int64

      parameter (nf_fill_byte = -127)
      parameter (nf_fill_int1 = nf_fill_byte)
      parameter (nf_fill_char = 0)
      parameter (nf_fill_short = -32767)
      parameter (nf_fill_int2 = nf_fill_short)
      parameter (nf_fill_int = -2147483647)
      parameter (nf_fill_float = 9.9692099683868690e+36)
      parameter (nf_fill_real = nf_fill_float)
      parameter (nf_fill_double = 9.9692099683868690e+36)
      parameter (nf_fill_int64 = -9223372036854775806_8)

!
! mode flags for opening and creating a netcdf dataset:
!
      integer nf_nowrite
      integer nf_write
      integer nf_clobber
      integer nf_noclobber
      integer nf_fill
      integer nf_nofill
      integer nf_lock
      integer nf_share
      integer nf_64bit_offset
      integer nf_32bit
      integer nf_64bit_data
      integer nf_sizehint_default
      integer nf_align_chunk
      integer nf_format_classic
      integer nf_format_64bit
      integer nf_format_64bit_data

      parameter (nf_nowrite = 0)
      parameter (nf_write = 1)
      parameter (nf_clobber = 0)
      parameter (nf_noclobber = 4)
      parameter (nf_fill = 0)
      parameter (nf_nofill = 256)
      parameter (nf_lock = 1024)
      parameter (nf_share = 2048)
      parameter (nf_64bit_offset = 512)
      parameter (nf_64bit_data = 16)
      parameter (nf_32bit = 16777216)
      parameter (nf_sizehint_default = 0)
      parameter (nf_align_chunk = -1)
      parameter (nf_format_classic = 1)
      parameter (nf_format_64bit = 2)
      parameter (nf_format_64bit_data = 5)

!
! size argument for defining an unlimited dimension:
!
      integer nf_unlimited
      parameter (nf_unlimited = 0)

!
! global attribute id:
!
      integer nf_global
      parameter (nf_global = 0)

!
! implementation limits:
!
      integer nf_max_dims
      integer nf_max_attrs
      integer nf_max_vars
      integer nf_max_name
      integer nf_max_var_dims

      parameter (nf_max_dims = 512)
      parameter (nf_max_attrs = 4092)
      parameter (nf_max_vars = 4096)
      parameter (nf_max_name = 128)
      parameter (nf_max_var_dims = nf_max_dims)

!
! error codes:
!
      integer NF_NOERR
      integer NF2_ERR
      integer NF_EBADID
      integer NF_ENFILE
      integer NF_EEXIST
      integer NF_EINVAL
      integer NF_EPERM
      integer NF_ENOTINDEFINE
      integer NF_EINDEFINE
      integer NF_EINVALCOORDS
      integer NF_EMAXDIMS
      integer NF_ENAMEINUSE
      integer NF_ENOTATT
      integer NF_EMAXATTS
      integer NF_EBADTYPE
      integer NF_EBADDIM
      integer NF_EUNLIMPOS
      integer NF_EMAXVARS
      integer NF_ENOTVAR
      integer NF_EGLOBAL
      integer NF_ENOTNC
      integer NF_ESTS
      integer NF_EMAXNAME
      integer NF_EUNLIMIT
      integer NF_ENORECVARS
      integer NF_ECHAR
      integer NF_EEDGE
      integer NF_ESTRIDE
      integer NF_EBADNAME
      integer NF_ERANGE
      integer NF_ENOMEM
      integer NF_EVARSIZE
      integer NF_EDIMSIZE

! PnetCDF error codes start here
      integer NF_ESMALL
      integer NF_ENOTINDEP
      integer NF_EINDEP
      integer NF_EFILE
      integer NF_EREAD
      integer NF_EWRITE
      integer NF_EMULTIDEFINE
      integer NF_EOFILE
      integer NF_EMULTITYPES
      integer NF_EIOMISMATCH
      integer NF_ENEGATIVECNT
      integer NF_EUNSPTETYPE
      integer NF_EDIMS_NELEMS_MULTIDEFINE
      integer NF_EDIMS_SIZE_MULTIDEFINE
      integer NF_EVARS_NELEMS_MULTIDEFINE
      integer NF_EVARS_NDIMS_MULTIDEFINE
      integer NF_EVARS_DIMIDS_MULTIDEFINE
      integer NF_EVARS_TYPE_MULTIDEFINE
      integer NF_EVARS_LEN_MULTIDEFINE
      integer NF_EVARS_BEGIN_MULTIDEFINE
      integer NF_ENUMRECS_MULTIDEFINE
      integer NF_EINVAL_REQUEST
      integer NF_EAINT_TOO_SMALL
      integer NF_ECMODE
      integer NF_ENOTSUPPORT
      integer NF_ENULLBUF
      integer NF_EPREVATTACHBUF
      integer NF_ENULLABUF
      integer NF_EPENDINGBPUT
      integer NF_EINSUFFBUF
      integer NF_ENOENT

      PARAMETER (NF_NOERR        = 0)   ! No Error
      PARAMETER (NF2_ERR         = -1)  ! Returned for all errors in the v2 API
      PARAMETER (NF_EBADID       = -33) ! Not a netcdf id
      PARAMETER (NF_ENFILE       = -34) ! Too many netcdfs open
      PARAMETER (NF_EEXIST       = -35) ! netcdf file exists and NF_NOCLOBBER
      PARAMETER (NF_EINVAL       = -36) ! Invalid Argument
      PARAMETER (NF_EPERM        = -37) ! Write to read only
      PARAMETER (NF_ENOTINDEFINE = -38) ! Operation not allowed in data mode
      PARAMETER (NF_EINDEFINE    = -39) ! Operation not allowed in define mode
      PARAMETER (NF_EINVALCOORDS = -40) ! Index exceeds dimension bound
      PARAMETER (NF_EMAXDIMS     = -41) ! NF_MAX_DIMS exceeded
      PARAMETER (NF_ENAMEINUSE   = -42) ! String match to name in use
      PARAMETER (NF_ENOTATT      = -43) ! Attribute not found
      PARAMETER (NF_EMAXATTS     = -44) ! NF_MAX_ATTRS exceeded
      PARAMETER (NF_EBADTYPE     = -45) ! Not a netcdf data type
      PARAMETER (NF_EBADDIM      = -46) ! Invalid dimension id or name
      PARAMETER (NF_EUNLIMPOS    = -47) ! NF_UNLIMITED in the wrong index
      PARAMETER (NF_EMAXVARS     = -48) ! NF_MAX_VARS exceeded
      PARAMETER (NF_ENOTVAR      = -49) ! Variable not found
      PARAMETER (NF_EGLOBAL      = -50) ! Action prohibited on NF_GLOBAL varid
      PARAMETER (NF_ENOTNC       = -51) ! Not a netcdf file
      PARAMETER (NF_ESTS         = -52) ! In Fortran, string too short
      PARAMETER (NF_EMAXNAME     = -53) ! NF_MAX_NAME exceeded
      PARAMETER (NF_EUNLIMIT     = -54) ! NF_UNLIMITED size already in use
      PARAMETER (NF_ENORECVARS   = -55) ! nc_rec op when there are no record vars
      PARAMETER (NF_ECHAR        = -56) ! Attempt to convert between text & numbers
      PARAMETER (NF_EEDGE        = -57) ! Edge+start exceeds dimension bound
      PARAMETER (NF_ESTRIDE      = -58) ! Illegal stride
      PARAMETER (NF_EBADNAME     = -59) ! Attribute or variable name contains illegal characters
      PARAMETER (NF_ERANGE       = -60) ! Math result not representable
      PARAMETER (NF_ENOMEM       = -61) ! Memory allocation (malloc) failure
      PARAMETER (NF_EVARSIZE     = -62) ! One or more variable sizes violate format constraints
      PARAMETER (NF_EDIMSIZE     = -63) ! Invalid dimension size

! PnetCDF error codes start here
      PARAMETER (NF_ESMALL                   = -201) ! size of off_t too small for format
      PARAMETER (NF_ENOTINDEP                = -202) ! Operation not allowed in collective data mode
      PARAMETER (NF_EINDEP                   = -203) ! Operation not allowed in independent data mode
      PARAMETER (NF_EFILE                    = -204) ! Unknown error in file operation
      PARAMETER (NF_EREAD                    = -205) ! Unknown error in reading file
      PARAMETER (NF_EWRITE                   = -206) ! Unknown error in writting to file
      PARAMETER (NF_EMULTIDEFINE             = -207) ! NC definitions on multiprocesses conflict
      PARAMETER (NF_EOFILE                   = -208) ! file open/creation failed
      PARAMETER (NF_EMULTITYPES              = -209) ! Multiple types used in memory data
      PARAMETER (NF_EIOMISMATCH              = -210) ! Input/Output data amount mismatch
      PARAMETER (NF_ENEGATIVECNT             = -211) ! Negative count is specified
      PARAMETER (NF_EUNSPTETYPE              = -212) ! Unsupported etype in memory MPI datatype
      PARAMETER (NF_EDIMS_NELEMS_MULTIDEFINE = -213) ! Different number of dim defines on multiprocesses conflict
      PARAMETER (NF_EDIMS_SIZE_MULTIDEFINE   = -214) ! Different size of dim defines on multiprocesses conflict
      PARAMETER (NF_EVARS_NELEMS_MULTIDEFINE = -215) ! Different number of var defines on multiprocesses conflict
      PARAMETER (NF_EVARS_NDIMS_MULTIDEFINE  = -216) ! Different dim number of var defines on multiprocesses conflict
      PARAMETER (NF_EVARS_DIMIDS_MULTIDEFINE = -217) ! Different dimid defines on multiprocesses conflict
      PARAMETER (NF_EVARS_TYPE_MULTIDEFINE   = -218) ! Different type of var defines on multiprocesses conflict
      PARAMETER (NF_EVARS_LEN_MULTIDEFINE    = -219) ! Different var lenght defines size on multiprocesses conflict
      PARAMETER (NF_EVARS_BEGIN_MULTIDEFINE  = -220) ! Different var begin defines size on multiprocesses conflict
      PARAMETER (NF_ENUMRECS_MULTIDEFINE     = -221) ! Different number records on multiprocesses conflict
      PARAMETER (NF_EINVAL_REQUEST           = -222) ! invalid nonblocking request ID
      PARAMETER (NF_EAINT_TOO_SMALL          = -223) ! MPI_Aint not large enough to hold requested value
      PARAMETER (NF_ECMODE                   = -224) ! file create modes are inconsistent among processes
      PARAMETER (NF_ENOTSUPPORT              = -225) ! feature is not yet supported
      PARAMETER (NF_ENULLBUF                 = -226) ! trying to attach a NULL buffer
      PARAMETER (NF_EPREVATTACHBUF           = -227) ! previous attached buffer is found
      PARAMETER (NF_ENULLABUF                = -228) ! no attached buffer is found
      PARAMETER (NF_EPENDINGBPUT             = -229) ! pending bput is found, cannot detach buffer
      PARAMETER (NF_EINSUFFBUF               = -230) ! attached buffer is too small
      PARAMETER (NF_ENOENT                   = -231) ! File does not exist when calling nfmpi_open()


! error handling modes:
!
      integer nf_fatal
      integer nf_verbose

      parameter (nf_fatal = 1)
      parameter (nf_verbose = 2)


!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
! begin netcdf 2.4 backward compatibility:
!

!      
! functions in the fortran interface
!

      integer ncrdwr
      integer nccreat
      integer ncexcl
      integer ncindef
      integer ncnsync
      integer nchsync
      integer ncndirty
      integer nchdirty
      integer nclink
      integer ncnowrit
      integer ncwrite
      integer ncclob
      integer ncnoclob
      integer ncglobal
      integer ncfill
      integer ncnofill
      integer maxncop
      integer maxncdim
      integer maxncatt
      integer maxncvar
      integer maxncnam
      integer maxvdims
      integer ncnoerr
      integer ncebadid
      integer ncenfile
      integer nceexist
      integer nceinval
      integer nceperm
      integer ncenotin
      integer nceindef
      integer ncecoord
      integer ncemaxds
      integer ncename
      integer ncenoatt
      integer ncemaxat
      integer ncebadty
      integer ncebadd
      integer ncests
      integer nceunlim
      integer ncemaxvs
      integer ncenotvr
      integer nceglob
      integer ncenotnc
      integer ncfoobar
      integer ncsyserr
      integer ncfatal
      integer ncverbos
      integer ncentool


!
! netcdf data types:
!
      integer ncbyte
      integer ncchar
      integer ncshort
      integer nclong
      integer ncfloat
      integer ncdouble

      parameter(ncbyte = 1)
      parameter(ncchar = 2)
      parameter(ncshort = 3)
      parameter(nclong = 4)
      parameter(ncfloat = 5)
      parameter(ncdouble = 6)

!     
!     masks for the struct nc flag field; passed in as 'mode' arg to
!     nccreate and ncopen.
!     

!     read/write, 0 => readonly 
      parameter(ncrdwr = 1)
!     in create phase, cleared by ncendef 
      parameter(nccreat = 2)
!     on create destroy existing file 
      parameter(ncexcl = 4)
!     in define mode, cleared by ncendef 
      parameter(ncindef = 8)
!     synchronise numrecs on change (x'10')
      parameter(ncnsync = 16)
!     synchronise whole header on change (x'20')
      parameter(nchsync = 32)
!     numrecs has changed (x'40')
      parameter(ncndirty = 64)  
!     header info has changed (x'80')
      parameter(nchdirty = 128)
!     prefill vars on endef and increase of record, the default behavior
      parameter(ncfill = 0)
!     do not fill vars on endef and increase of record (x'100')
      parameter(ncnofill = 256)
!     isa link (x'8000')
      parameter(nclink = 32768)

!     
!     'mode' arguments for nccreate and ncopen
!     
      parameter(ncnowrit = 0)
      parameter(ncwrite = ncrdwr)
      parameter(ncclob = nf_clobber)
      parameter(ncnoclob = nf_noclobber)

!     
!     'size' argument to ncdimdef for an unlimited dimension
!     
      integer ncunlim
      parameter(ncunlim = 0)

!     
!     attribute id to put/get a global attribute
!     
      parameter(ncglobal  = 0)

!     
!     advisory maximums:
!     
      parameter(maxncop = 32)
      parameter(maxncdim = 100)
      parameter(maxncatt = 2000)
      parameter(maxncvar = 2000)
!     not enforced 
      parameter(maxncnam = 128)
      parameter(maxvdims = maxncdim)

!     
!     global netcdf error status variable
!     initialized in error.c
!     

!     no error 
      parameter(ncnoerr = nf_noerr)
!     not a netcdf id 
      parameter(ncebadid = nf_ebadid)
!     too many netcdfs open 
      parameter(ncenfile = -31)   ! nc_syserr
!     netcdf file exists && ncnoclob
      parameter(nceexist = nf_eexist)
!     invalid argument 
      parameter(nceinval = nf_einval)
!     write to read only 
      parameter(nceperm = nf_eperm)
!     operation not allowed in data mode 
      parameter(ncenotin = nf_enotindefine )   
!     operation not allowed in define mode 
      parameter(nceindef = nf_eindefine)   
!     coordinates out of domain 
      parameter(ncecoord = nf_einvalcoords)
!     maxncdims exceeded 
      parameter(ncemaxds = nf_emaxdims)
!     string match to name in use 
      parameter(ncename = nf_enameinuse)   
!     attribute not found 
      parameter(ncenoatt = nf_enotatt)
!     maxncattrs exceeded 
      parameter(ncemaxat = nf_emaxatts)
!     not a netcdf data type 
      parameter(ncebadty = nf_ebadtype)
!     invalid dimension id 
      parameter(ncebadd = nf_ebaddim)
!     ncunlimited in the wrong index 
      parameter(nceunlim = nf_eunlimpos)
!     maxncvars exceeded 
      parameter(ncemaxvs = nf_emaxvars)
!     variable not found 
      parameter(ncenotvr = nf_enotvar)
!     action prohibited on ncglobal varid 
      parameter(nceglob = nf_eglobal)
!     not a netcdf file 
      parameter(ncenotnc = nf_enotnc)
      parameter(ncests = nf_ests)
      parameter (ncentool = nf_emaxname) 
      parameter(ncfoobar = 32)
      parameter(ncsyserr = -31)

!     
!     global options variable. used to determine behavior of error handler.
!     initialized in lerror.c
!     
      parameter(ncfatal = 1)
      parameter(ncverbos = 2)

!
!     default fill values.  these must be the same as in the c interface.
!
      integer filbyte
      integer filchar
      integer filshort
      integer fillong
      real filfloat
      doubleprecision fildoub

      parameter (filbyte = -127)
      parameter (filchar = 0)
      parameter (filshort = -32767)
      parameter (fillong = -2147483647)
      parameter (filfloat = 9.9692099683868690e+36)
      parameter (fildoub = 9.9692099683868690e+36)

!
!   Define the following NF_*_IS_C_* macros appropriatly for your system.
!   The "INT1", "INT2" and "INT" after the "NF_" refer to the NF_INT1_T
!   FORTRAN datatype, the NF_INT2_T FORTRAN datatype, and the INTEGER
!   FORTRAN datatype, respectively.  If the respective FORTRAN datatype
!   does not exist, then do not define the corresponding macro. 
#undef NF_INT1_IS_C_SIGNED_CHAR
#undef NF_INT1_IS_C_SHORT
#undef NF_INT1_IS_C_INT
#undef NF_INT1_IS_C_LONG
#undef NF_INT2_IS_C_SHORT
#undef NF_INT2_IS_C_INT
#undef NF_INT2_IS_C_LONG
#undef NF_INT_IS_C_INT
#undef NF_INT_IS_C_LONG
#undef NF_INT8_IS_C_LONG
#undef NF_INT8_IS_C_LONG_LONG
#undef NF_REAL_IS_C_FLOAT
#undef NF_REAL_IS_C_DOUBLE
#undef NF_DOUBLEPRECISION_IS_C_DOUBLE
#undef NF_DOUBLEPRECISION_IS_C_FLOAT

! The number of bytes in a MPI_Offset 
#undef SIZEOF_MPI_OFFSET

#define NFMPI_OFFSET INTEGER*SIZEOF_MPI_OFFSET

! now we can define nfmpi_unlimited properly
      integer*SIZEOF_MPI_OFFSET nfmpi_unlimited
      parameter (nfmpi_unlimited = 0)
